type Article {
  uuid: ID!
  category: Category
  title: String!
  slug: String!
  status: Boolean!
  excerpt: String
  content: String
  featured_image: String
  related_articles: [Article]
  tags: [Tag]
  created_at: DateTime!
  updated_at: DateTime!
}

input CreateArticleInput {
  category_uuid: ID
  title: String!
  content: String
  featured_image: Upload
  status: Boolean
  tags: [String] = []
}

input UpdateArticleInput {
  uuid: ID!
  category_uuid: ID
  title: String
  content: String
  featured_image: Upload
  status: Boolean
  tags: [String]
}

extend type Mutation {
  createArticle(input: CreateArticleInput): Article
  updateArticle(input: UpdateArticleInput): Article
  deleteArticle(uuid: ID!): Article
}

input GetArticlesInput {
  page: Int = 1
  count: Int = 10
  isAdmin: Boolean = false
}

input GetArticlesByCategorySlugInput {
  category_slug: String!
  page: Int = 1
  count: Int = 10
}

input GetArticleInput {
  slug: String!
  isAdmin: Boolean = false
}

type ArticlesResponse {
  articles: [Article]
  pagination: Pagination
}

extend type Query {
  getArticles(input: GetArticlesInput): ArticlesResponse
  getArticlesByCategorySlug(
    input: GetArticlesByCategorySlugInput
  ): ArticlesResponse
  getArticle(input: GetArticleInput): Article
}
